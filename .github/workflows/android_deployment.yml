name: Create build for Android and upload to playstore - new test
on:
  push:
    branches: ['main']
jobs:
  # ----------------------- ANDROID -----------------------------
  # -------------------------------------------------------------
  build-prod-android:
    name: Build & ship android prod app
    runs-on: ubuntu-latest
    steps:
      # Step 1: Setup java and node
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - name: Set up NODE
        uses: actions/setup-node@v3
        with:
          node-version: 14 # using the .nvmrc file in future

      # Step 2: Configure gradel and gradle wrapper with cache
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      # Step 3: Install node packages
      - name: Install node modules
        run: npm install
        env:
          CI: true

      # Step 4: Setup ruby
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      # Step 5: Install bundler, and fastlane
      - name: Install Fastlane
        run: cd android && bundle install && cd ../
        env:
          CI: true

      # # Step 6: Install reactnative community pacakge manually
      # - name: Add @react-native-community manually
      #   run: |
      #     npm install @react-native-community/cli-platform-android
      #   env:
      #     CI: true

      # Step 7: Decrypt keystore, generate keystore.properties, create Google Play API Key
      - name: Decrypt keystore, generate keystore.properties, create Google Play API Key
        run: |
          cd android
          echo ${{ secrets.ANDROID_KEYSTORE_FILE }} | base64 -d > app/my-upload-key.keystore
          printf 'releaseKeyAlias=%s\nreleaseKeyPassword=%s\nreleaseKeyStore=%s\nreleaseStorePassword=%s' \
                  ${{ secrets.ANDROID_KEYSTORE_ALIAS }} ${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
                  ${{ secrets.ANDROID_KEYSTORE_FILE_NAME }} ${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \ 
                  > keystore.properties
          echo $GOOGLE_SERVICE_API_JSON > fastlane/api.json
          ls -la app
          ls -la fastlane
          ls -la
        env:
          CI: true

      # Step 8: Fastlane test android
      - name: Fastlane TEST android
        run: |
          cd android
          bundle exec fastlane test
        env:
          CI: true
          CD: true

      # Step 9: Fastlane beta build android
      - name: Fastlane BETA android
        run: bundle exec fastlane beta
        env:
          CI: true
          CD: true

      # Step 10: Delete Sensitive Files generated through CI/CD
      - name: Delete sensitive files
        run: |
          echo "Before removal"
          ls -la app
          ls -la fastlane
          ls -la
          rm app/my-upload-key.keystore
          rm fastlane/api.json
          rm keystore.properties
          echo "After removal"
          ls -la app
          ls -la fastlane
          ls -la
        env:
          CI: true
          CD: true
