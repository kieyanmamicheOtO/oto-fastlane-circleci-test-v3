# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  
  desc "Sets up project to be able to run necessary plugins"
  lane :setup do
    sh('echo | bundle exec fastlane add_plugin increment_version_code')
  end
  
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to internal testing"
  lane :beta do
    increment_version_code
    gradle(
      task: 'bundle',
      build_type: 'Release'
    )
    upload_to_play_store(
      track: 'internal',
      skip_upload_apk: true,
      release_status: 'draft'
    )
  end
  
  desc "Deploys to play store without needing json key file"
  lane :deploy_to_play_store_circle_ci do
    # Load the JSON key data from the environment variable
    json_key_data = ENV['SUPPLY_JSON_KEY_DATA']
  
    # Write the JSON key data to a file for Fastlane to use
    File.write('keyfile.json', json_key_data)
    
    increment_version_code
    gradle(
      task: 'bundle',
      build_type: 'Release'
    )
    upload_to_play_store(
      track: 'internal',
      skip_upload_apk: true,
      release_status: 'draft',
      json_key: 'fastlane/keyfile.json'
    )
  
    # Clean up by removing the temporary JSON key file
    sh('rm keyfile.json')
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
